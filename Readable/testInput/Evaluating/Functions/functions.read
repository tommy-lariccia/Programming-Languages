func factorial(i):
    if (i <= 1):
        print("stop here")  // printed once
        return i  // multiple return statements, one within a block
    return i * factorial(i - 1)  // recursion

print(factorial(5))  // 120

// -----------

func foo():
    c = 2
    func foobar(a, b):
        c = a + b + c
        return c
    return foobar

newFunc = foo()
print(newFunc(3, 2))     // 7
print(newFunc(3, 2))     // 12
print(foo()(3, 2))       // 7

// -----------

func weightedAverage(*args):
    sum_ = 0
    foreach i in args:
        sum_ = sum_ + i[0] * i[1]
    return sum_ / len(args)

print(weightedAverage([2, 0.1], [2, 0.1]))   // 0.2
print(weightedAverage([2, 0.1], *[[1, 0.2], [3, 0.5], [4, 0.1183], [1918, 0.001]]))   // 0.85824

arr = [[1, 0.2], [3, 0.5], [4, 0.1183], [1918, 0.001]]
print(weightedAverage(*arr))   // 1.0228

// -----------

lambda z = (e, f) => e + f
print(z(3, 5))  // 8